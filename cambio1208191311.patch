diff --git a/Acme-HandyWorker/pom.xml b/Acme-HandyWorker/pom.xml
index 0d6c24a..1604264 100644
--- a/Acme-HandyWorker/pom.xml
+++ b/Acme-HandyWorker/pom.xml
@@ -312,7 +312,14 @@
 			<artifactId>aspectjweaver</artifactId>
 			<version>1.7.4</version>
 		</dependency>
-
+		
+		<!-- HTML parser -->
+		<dependency>
+			<groupId>org.jsoup</groupId>
+			<artifactId>jsoup</artifactId>
+			<version>1.11.3</version>
+		</dependency>
+		
 	</dependencies>
 
 	<description>This system allows people contract Handy Worker for their Fix-Up Tasks.</description>
diff --git a/Acme-HandyWorker/src/main/java/controllers/customer/ApplicationCustomerController.java b/Acme-HandyWorker/src/main/java/controllers/customer/ApplicationCustomerController.java
index 78f5990..d0bf0d4 100644
--- a/Acme-HandyWorker/src/main/java/controllers/customer/ApplicationCustomerController.java
+++ b/Acme-HandyWorker/src/main/java/controllers/customer/ApplicationCustomerController.java
@@ -20,6 +20,7 @@ import org.springframework.web.servlet.ModelAndView;
 
 import services.ApplicationService;
 import services.CustomisationService;
+import services.UtilityService;
 import controllers.AbstractController;
 import domain.Application;
 
@@ -33,6 +34,9 @@ public class ApplicationCustomerController extends AbstractController {
 	@Autowired
 	private CustomisationService	customisationService;
 
+	@Autowired
+	private UtilityService			utilityService;
+
 
 	// Constructors -----------------------------------------------------------
 	public ApplicationCustomerController() {
@@ -82,7 +86,7 @@ public class ApplicationCustomerController extends AbstractController {
 		ModelAndView result;
 		List<String> brandName;
 
-		brandName = (List<String>) this.customisationService.find().getCreditCardMakes();
+		brandName = this.utilityService.ListByString(this.customisationService.find().getCreditCardMakes());
 
 		result = new ModelAndView("application/edit");
 		result.addObject("application", application);
diff --git a/Acme-HandyWorker/src/main/java/controllers/handyWorkercustomer/ApplicationHandyWorkerCustomerController.java b/Acme-HandyWorker/src/main/java/controllers/handyWorkercustomer/ApplicationHandyWorkerCustomerController.java
index 2bcd5c7..506eb8e 100644
--- a/Acme-HandyWorker/src/main/java/controllers/handyWorkercustomer/ApplicationHandyWorkerCustomerController.java
+++ b/Acme-HandyWorker/src/main/java/controllers/handyWorkercustomer/ApplicationHandyWorkerCustomerController.java
@@ -23,6 +23,7 @@ import org.springframework.web.servlet.ModelAndView;
 import security.LoginService;
 import services.ApplicationService;
 import services.CustomisationService;
+import services.UtilityService;
 import controllers.AbstractController;
 import domain.Application;
 import domain.Customisation;
@@ -37,6 +38,9 @@ public class ApplicationHandyWorkerCustomerController extends AbstractController
 	@Autowired
 	private CustomisationService	customisationService;
 
+	@Autowired
+	private UtilityService			utilityService;
+
 
 	// Constructors -----------------------------------------------------------
 	public ApplicationHandyWorkerCustomerController() {
@@ -82,7 +86,7 @@ public class ApplicationHandyWorkerCustomerController extends AbstractController
 		double vat;
 
 		customisation = this.customisationService.find();
-		creditCardMakes = customisation.getCreditCardMakes();
+		creditCardMakes = this.utilityService.ListByString(customisation.getCreditCardMakes());
 		vat = this.customisationService.find().getVAT();
 
 		result = new ModelAndView("application/edit");
diff --git a/Acme-HandyWorker/src/main/java/controllers/sponsor/SponsorshipSponsorController.java b/Acme-HandyWorker/src/main/java/controllers/sponsor/SponsorshipSponsorController.java
index 5114588..695fc9e 100644
--- a/Acme-HandyWorker/src/main/java/controllers/sponsor/SponsorshipSponsorController.java
+++ b/Acme-HandyWorker/src/main/java/controllers/sponsor/SponsorshipSponsorController.java
@@ -26,6 +26,7 @@ import services.CustomisationService;
 import services.SponsorService;
 import services.SponsorshipService;
 import services.TutorialService;
+import services.UtilityService;
 import controllers.AbstractController;
 import domain.Customisation;
 import domain.Sponsor;
@@ -48,6 +49,9 @@ public class SponsorshipSponsorController extends AbstractController {
 	@Autowired
 	private SponsorService			sponsorService;
 
+	@Autowired
+	private UtilityService			utilityService;
+
 
 	// Constructors -----------------------------------------------------------
 	public SponsorshipSponsorController() {
@@ -142,7 +146,7 @@ public class SponsorshipSponsorController extends AbstractController {
 		Customisation customisation;
 
 		customisation = this.customisationService.find();
-		creditCardMakes = customisation.getCreditCardMakes();
+		creditCardMakes = this.utilityService.ListByString(customisation.getCreditCardMakes());
 
 		result = new ModelAndView("sponsorship/edit");
 		result.addObject("sponsorship", sponsorship);
diff --git a/Acme-HandyWorker/src/main/java/domain/Customisation.java b/Acme-HandyWorker/src/main/java/domain/Customisation.java
index b485e76..49ff2b8 100644
--- a/Acme-HandyWorker/src/main/java/domain/Customisation.java
+++ b/Acme-HandyWorker/src/main/java/domain/Customisation.java
@@ -1,11 +1,8 @@
 
 package domain;
 
-import java.util.Collection;
-
 import javax.persistence.Access;
 import javax.persistence.AccessType;
-import javax.persistence.ElementCollection;
 import javax.persistence.Entity;
 import javax.validation.constraints.Digits;
 import javax.validation.constraints.NotNull;
@@ -30,23 +27,22 @@ public class Customisation extends DomainEntity {
 
 	// Atributes
 
-	private String				systemName;
-	private String				banner;
-	private String				welcomeMessageEn;
-	private String				welcomeMessageSp;
-	private double				VAT;
-	private String				countryCode;
-	private Collection<String>	creditCardMakes;
-	private int					timeCachedFinderResults;
-	private int					maxFinderResults;
-	private Collection<String>	spamWords;
-	private Collection<String>	positiveWords;
-	private Collection<String>	negativeWords;
-	private Collection<String>	languages;
+	private String	systemName;
+	private String	banner;
+	private String	welcomeMessageEn;
+	private String	welcomeMessageSp;
+	private double	VAT;
+	private String	countryCode;
+	private String	creditCardMakes;
+	private int		timeCachedFinderResults;
+	private int		maxFinderResults;
+	private String	spamWords;
+	private String	positiveWords;
+	private String	negativeWords;
 
 
 	@NotBlank
-	@SafeHtml(whitelistType = SafeHtml.WhiteListType.NONE)
+	@SafeHtml
 	public String getSystemName() {
 		return this.systemName;
 	}
@@ -66,7 +62,7 @@ public class Customisation extends DomainEntity {
 	}
 
 	@NotBlank
-	@SafeHtml(whitelistType = SafeHtml.WhiteListType.NONE)
+	@SafeHtml
 	public String getWelcomeMessageEn() {
 		return this.welcomeMessageEn;
 	}
@@ -76,7 +72,7 @@ public class Customisation extends DomainEntity {
 	}
 
 	@NotBlank
-	@SafeHtml(whitelistType = SafeHtml.WhiteListType.NONE)
+	@SafeHtml
 	public String getWelcomeMessageSp() {
 		return this.welcomeMessageSp;
 	}
@@ -107,12 +103,12 @@ public class Customisation extends DomainEntity {
 
 	@NotEmpty
 	@NotNull
-	@ElementCollection
-	public Collection<String> getCreditCardMakes() {
+	@SafeHtml
+	public String getCreditCardMakes() {
 		return this.creditCardMakes;
 	}
 
-	public void setCreditCardMakes(final Collection<String> creditCardMakes) {
+	public void setCreditCardMakes(final String creditCardMakes) {
 		this.creditCardMakes = creditCardMakes;
 	}
 
@@ -135,43 +131,32 @@ public class Customisation extends DomainEntity {
 	}
 
 	@NotNull
-	@ElementCollection
-	public Collection<String> getSpamWords() {
+	@SafeHtml
+	public String getSpamWords() {
 		return this.spamWords;
 	}
 
-	public void setSpamWords(final Collection<String> spamWords) {
+	public void setSpamWords(final String spamWords) {
 		this.spamWords = spamWords;
 	}
 
 	@NotNull
-	@ElementCollection
-	public Collection<String> getPositiveWords() {
+	@SafeHtml
+	public String getPositiveWords() {
 		return this.positiveWords;
 	}
 
-	public void setPositiveWords(final Collection<String> positiveWords) {
+	public void setPositiveWords(final String positiveWords) {
 		this.positiveWords = positiveWords;
 	}
 
 	@NotNull
-	@ElementCollection
-	public Collection<String> getNegativeWords() {
+	@SafeHtml
+	public String getNegativeWords() {
 		return this.negativeWords;
 	}
 
-	public void setNegativeWords(final Collection<String> negativeWords) {
+	public void setNegativeWords(final String negativeWords) {
 		this.negativeWords = negativeWords;
 	}
-
-	@NotEmpty
-	@ElementCollection
-	public Collection<String> getLanguages() {
-		return this.languages;
-	}
-
-	public void setLanguages(final Collection<String> languages) {
-		this.languages = languages;
-	}
-
 }
diff --git a/Acme-HandyWorker/src/main/java/services/CategoryService.java b/Acme-HandyWorker/src/main/java/services/CategoryService.java
index 2dba240..6472a91 100644
--- a/Acme-HandyWorker/src/main/java/services/CategoryService.java
+++ b/Acme-HandyWorker/src/main/java/services/CategoryService.java
@@ -2,6 +2,7 @@
 package services;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.Collection;
 import java.util.Collections;
 import java.util.HashMap;
@@ -35,9 +36,6 @@ public class CategoryService {
 	@Autowired
 	private CategoryTranslationService	categoryTranslationService;
 
-	@Autowired
-	private CustomisationService		customisatinoService;
-
 	@Autowired
 	private FixUpTaskService			fixUpTaskService;
 
@@ -87,7 +85,7 @@ public class CategoryService {
 
 	public Category save(final Category category) {
 		Assert.notNull(category);
-		Assert.isTrue(category.getCategoriesTranslations().size() == this.customisatinoService.find().getLanguages().size() && this.validLanguages(category));
+		Assert.isTrue(this.validLanguages(category));
 		this.checkValidParentCategory(category);
 
 		Category root, result, parent_category, old_category, old_parent_category;
@@ -325,11 +323,11 @@ public class CategoryService {
 		final Map<String, Integer> map;
 		Collection<CategoryTranslation> categoriesTranslations;
 		boolean result;
-		final Collection<String> languages;
+		final List<String> languages;
 		Integer valor;
 
 		map = new HashMap<String, Integer>();
-		languages = this.customisatinoService.find().getLanguages();
+		languages = Arrays.asList("en", "es");
 		categoriesTranslations = category.getCategoriesTranslations();
 		result = true;
 		valor = 0;
diff --git a/Acme-HandyWorker/src/main/java/services/CategoryTranslationService.java b/Acme-HandyWorker/src/main/java/services/CategoryTranslationService.java
index 89881e5..5b2818c 100644
--- a/Acme-HandyWorker/src/main/java/services/CategoryTranslationService.java
+++ b/Acme-HandyWorker/src/main/java/services/CategoryTranslationService.java
@@ -20,10 +20,8 @@ public class CategoryTranslationService {
 	@Autowired
 	private CategoryTranslationRepository	categoryTranslationRepository;
 
-	// Supporting services -----------------------------
-	@Autowired
-	private CustomisationService			customisationService;
 
+	// Supporting services -----------------------------
 
 	// Constructors ------------------------------------
 	public CategoryTranslationService() {
@@ -58,7 +56,7 @@ public class CategoryTranslationService {
 
 	protected CategoryTranslation save(final CategoryTranslation categoryTranslation) {
 		Assert.notNull(categoryTranslation);
-		Assert.isTrue(this.validLanguage(categoryTranslation));
+		Assert.isTrue(categoryTranslation.getLanguage().equals("en") || categoryTranslation.getLanguage().equals("es"));
 
 		CategoryTranslation result;
 
@@ -83,13 +81,4 @@ public class CategoryTranslationService {
 		return result;
 	}
 
-	// Private methods ---------------------------------
-	private boolean validLanguage(final CategoryTranslation categoryTranslation) {
-		Collection<String> languages;
-
-		languages = this.customisationService.find().getLanguages();
-
-		return languages.contains(categoryTranslation.getLanguage());
-	}
-
 }
diff --git a/Acme-HandyWorker/src/main/java/services/EndorsableService.java b/Acme-HandyWorker/src/main/java/services/EndorsableService.java
index 55ca9e8..4951691 100644
--- a/Acme-HandyWorker/src/main/java/services/EndorsableService.java
+++ b/Acme-HandyWorker/src/main/java/services/EndorsableService.java
@@ -16,6 +16,7 @@ import org.springframework.util.Assert;
 import repositories.EndorsableRepository;
 import security.LoginService;
 import security.UserAccount;
+import domain.Customisation;
 import domain.Endorsable;
 import domain.Endorsement;
 
@@ -34,6 +35,9 @@ public class EndorsableService {
 	@Autowired
 	private CustomisationService	customisationService;
 
+	@Autowired
+	private UtilityService			utilityService;
+
 
 	// Constructors ------------------------------------
 	public EndorsableService() {
@@ -145,12 +149,13 @@ public class EndorsableService {
 	private List<Integer> positiveNegativeWordNumbers(final Collection<Endorsement> receivedEndorsements) {
 		Assert.isTrue(receivedEndorsements != null && receivedEndorsements.size() > 0);
 
+		final Customisation find = this.customisationService.find();
 		final List<Integer> results = new ArrayList<Integer>();
 		String comments = "";
 		String[] words = {};
 		Integer positive = 0, negative = 0;
-		final List<String> positive_ls = new ArrayList<>(this.customisationService.find().getPositiveWords());
-		final List<String> negative_ls = new ArrayList<>(this.customisationService.find().getNegativeWords());
+		final List<String> positive_ls = this.utilityService.ListByString(find.getPositiveWords());
+		final List<String> negative_ls = this.utilityService.ListByString(find.getNegativeWords());
 
 		for (final Endorsement e : receivedEndorsements) {
 			comments = e.getComments();
@@ -168,5 +173,4 @@ public class EndorsableService {
 
 		return results;
 	}
-
 }
diff --git a/Acme-HandyWorker/src/main/java/services/UtilityService.java b/Acme-HandyWorker/src/main/java/services/UtilityService.java
index dad3cb3..cbd570b 100644
--- a/Acme-HandyWorker/src/main/java/services/UtilityService.java
+++ b/Acme-HandyWorker/src/main/java/services/UtilityService.java
@@ -166,6 +166,22 @@ public class UtilityService {
 		return result;
 	}
 
+	public List<String> ListByString(final String cadena) {
+		List<String> result;
+		String[] campos;
+		String word;
+
+		campos = cadena.split(",");
+
+		result = new ArrayList<String>();
+		for (final String s : campos) {
+			word = s.trim();
+			result.add(word);
+		}
+
+		return result;
+	}
+
 	// Private methods ---------------------------------------------------------
 
 	private String createRandomLetters() {
@@ -256,7 +272,7 @@ public class UtilityService {
 
 	public boolean checkIsSpamMarkAsSuspicious(final String string, final Actor actor) {
 		boolean res = false;
-		final Collection<String> spamWords = this.customisationService.find().getSpamWords();
+		final Collection<String> spamWords = this.ListByString(this.customisationService.find().getSpamWords());
 
 		for (final String sw : spamWords)
 			if (string.contains(sw)) {
diff --git a/Acme-HandyWorker/src/main/resources/PopulateDatabase.xml b/Acme-HandyWorker/src/main/resources/PopulateDatabase.xml
index 53ab889..68ce74a 100644
--- a/Acme-HandyWorker/src/main/resources/PopulateDatabase.xml
+++ b/Acme-HandyWorker/src/main/resources/PopulateDatabase.xml
@@ -2128,66 +2128,12 @@
 			value="¡Bienvenidos a Acme Handy Worker! Precio, calidad y confianza en el mismo sitio" />
 		<property name="VAT" value="0.21" />
 		<property name="countryCode" value="+34" />
-		<property name="creditCardMakes">
-			<list>
-				<value>VISA</value>
-				<value>MASTER</value>
-				<value>DINNERS</value>
-				<value>AMEX</value>
-			</list>
-		</property>
+		<property name="creditCardMakes" value="VISA,MASTER,DINNERS,AMEX" />
 		<property name="timeCachedFinderResults" value="1" />
 		<property name="maxFinderResults" value="10" />
-		<property name="spamWords">
-			<list>
-				<value>sex</value>
-				<value>viagra</value>
-				<value>cialis</value>
-				<value>one million</value>
-				<value>you´ve been selected</value>
-				<value>Nigeria</value>
-				<value>sexo</value>
-				<value>un millon</value>
-				<value>ha sido seleccionado</value>
-			</list>
-		</property>
-		<property name="positiveWords">
-			<list>
-				<value>good</value>
-				<value>fantastic</value>
-				<value>excellent</value>
-				<value>great</value>
-				<value>amazing</value>
-				<value>terrific</value>
-				<value>beautiful</value>
-				<value>bien</value>
-				<value>fantastico</value>
-				<value>excelente</value>
-				<value>genial</value>
-				<value>increible</value>
-				<value>terrorifico</value>
-				<value>hermosos</value>
-			</list>
-		</property>
-		<property name="negativeWords">
-			<list>
-				<value>not</value>
-				<value>bad</value>
-				<value>horrible</value>
-				<value>average</value>
-				<value>disaster</value>
-				<value>no</value>
-				<value>mal</value>
-				<value>mediocre</value>
-				<value>desastre</value>
-			</list>
-		</property>
-		<property name="languages">
-			<list>
-				<value>es</value>
-				<value>en</value>
-			</list>
-		</property>		
+		<property name="spamWords" value="sex,viagra,cialis,one million,you´ve been selected,nigeria,sexo,un millón,ha sido seleccionado" />
+		<property name="positiveWords" value="good,fantastic,excellent,great,amazing,terrific,beautiful,bien,fantástico,excelente,genial,increible,terrorifico,hermoso" />
+		<property name="negativeWords" value="not,bad,horrible,average,disaster,no,mal,mediocre,desastre" />	
 	</bean>
 
 	<!-- CreditCards -->
diff --git a/Acme-HandyWorker/src/main/webapp/views/customisation/display.jsp b/Acme-HandyWorker/src/main/webapp/views/customisation/display.jsp
index ddfeb3b..2aaec2b 100644
--- a/Acme-HandyWorker/src/main/webapp/views/customisation/display.jsp
+++ b/Acme-HandyWorker/src/main/webapp/views/customisation/display.jsp
@@ -50,32 +50,31 @@
 	<jstl:out value="${customisation.maxFinderResults}" />
 </p>
 
-<display:table name="customisation.creditCardMakes" id="row" requestURI="customisation/administrator/display.do" pagesize="5" class="displaytag">
-	<display:column value="${row}" titleKey="customisation.creditCardMakes" />
-</display:table>
-
-<display:table name="customisation.positiveWords" id="row" requestURI="customisation/administrator/display.do" pagesize="5" class="displaytag">
-	<display:column value="${row}" titleKey="customisation.positiveWords"/>
-</display:table>
+<p>
+	<strong> <spring:message code="customisation.creditCardMakes" />: </strong>
+	<jstl:out value="${customisation.creditCardMakes}" />
+</p>
 
-<display:table name="customisation.negativeWords" id="row" requestURI="customisation/administrator/display.do" pagesize="5" class="displaytag">
-	<display:column value="${row}" titleKey="customisation.negativeWords"/>
-</display:table>
+<p>
+	<strong> <spring:message code="customisation.positiveWords" />: </strong>
+	<jstl:out value="${customisation.positiveWords}" />
+</p>
 
-<display:table name="customisation.spamWords" id="row" requestURI="customisation/administrator/display.do" pagesize="5" class="displaytag">
-	<display:column value="${row}" titleKey="customisation.spamWords"/>
-</display:table>
+<p>
+	<strong> <spring:message code="customisation.negativeWords" />: </strong>
+	<jstl:out value="${customisation.negativeWords}" />
+</p>
 
-<display:table name="customisation.languages" id="row" requestURI="customisation/administrator/display.do" pagesize="5" class="displaytag">
-	<display:column value="${row}" titleKey="customisation.languages"/>
-</display:table>
+<p>
+	<strong> <spring:message code="customisation.spamWords" />: </strong>
+	<jstl:out value="${customisation.spamWords}" />
+</p>
 
 <a href="customisation/administrator/edit.do">
 	<spring:message code="customisation.edit" />
 </a>
 <br />
 
-
 <p>
 	<a href="welcome/index.do">
 		<spring:message code="endorsement.return" />
diff --git a/Acme-HandyWorker/src/main/webapp/views/customisation/edit.jsp b/Acme-HandyWorker/src/main/webapp/views/customisation/edit.jsp
index c2e17ce..f8a8aea 100644
--- a/Acme-HandyWorker/src/main/webapp/views/customisation/edit.jsp
+++ b/Acme-HandyWorker/src/main/webapp/views/customisation/edit.jsp
@@ -72,7 +72,7 @@
 	<form:label path="creditCardMakes">
 		<spring:message code="customisation.creditCardMakes" />:
 	</form:label>
-	<form:textarea path="creditCardMakes" />
+	<form:input path="creditCardMakes" />
 	<form:errors cssClass="error" path="creditCardMakes" />
 	<br/>
 	
@@ -97,13 +97,6 @@
 	<form:errors cssClass="error" path="spamWords" />
 	<br/>
 	
-	<form:label path="languages">
-		<spring:message code="customisation.languages" />:
-	</form:label>
-	<form:input path="languages" />
-	<form:errors cssClass="error" path="languages" />
-	<br/>
-	
 	<input type="submit" name="save" value="<spring:message code="customisation.save" />" />
 	<input type="button" name="cancel"	value="<spring:message code="customisation.cancel" /> "onclick="javascript: relativeRedir('customisation/administrator/display.do');" />
 	<br />
diff --git a/Acme-HandyWorker/src/test/java/services/CustomisationServiceTest.java b/Acme-HandyWorker/src/test/java/services/CustomisationServiceTest.java
index df69392..b48c213 100644
--- a/Acme-HandyWorker/src/test/java/services/CustomisationServiceTest.java
+++ b/Acme-HandyWorker/src/test/java/services/CustomisationServiceTest.java
@@ -1,9 +1,6 @@
 
 package services;
 
-import java.util.ArrayList;
-import java.util.List;
-
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -33,8 +30,8 @@ public class CustomisationServiceTest extends AbstractTest {
 	public void testSave() {
 		super.authenticate("admin1");
 
+		String positiveWords;
 		Customisation customisation, saved;
-		List<String> positiveWords;
 
 		customisation = this.customisationService.find();
 
@@ -42,10 +39,7 @@ public class CustomisationServiceTest extends AbstractTest {
 		customisation.setMaxFinderResults(20);
 		customisation.setCountryCode("+40");
 
-		positiveWords = new ArrayList<>(customisation.getPositiveWords());
-		positiveWords.add("Masterpiece");
-		positiveWords.add("Obra maestra");
-
+		positiveWords = customisation.getPositiveWords() + ",Obra maestra,Masterpiece";
 		customisation.setPositiveWords(positiveWords);
 
 		saved = this.customisationService.save(customisation);
